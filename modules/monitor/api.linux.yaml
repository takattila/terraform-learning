on_start:
  port: 7070
  routes:
    all: /all
    playground: /play
    model: /model
    cpu: /cpu
    memory: /memory
    processes: /processes
    storages: /storages
    services: /services
    network: /network
    toggle: /toggle/{section}/{status}
    run:
      list: /run/list
      exec: /run/exec/{name}
      stdout: /run/stdout/{name}
    skins: /skins
    logos: /logos
  logger:
    level: debug
    color: on
on_runtime:
  # physical_memory: 1GB
  memory:
      - bash
      - -c
      - |
        FREE_OUTPUT=$(free -b)
        VMSTAT_OUTPUT=$(vmstat)

        function convert_bytes() {
            local bytes=$1
            local units=("B" "KB" "MB" "GB" "TB")
            local unit_index=0
            local converted_value=$bytes

            if (( bytes > 1024 )); then
                until (( converted_value < 1024 )) || (( unit_index >= ${#units[@]} )); do
                    converted_value=$(( converted_value / 1024 ))
                    (( unit_index++ ))
                done
            fi

            echo "$converted_value ${units[$unit_index]}"
        }

        read -r _ total_b used_b free_b shared_b buff_cache_b available_b <<< "$(echo "$FREE_OUTPUT" | grep 'Mem:')"
        read -r _ swap_total_b swap_used_b _ <<< "$(echo "$FREE_OUTPUT" | grep 'Swap:')"

        read -r _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ io_wait _ <<< "$(echo "$VMSTAT_OUTPUT" | tail -1)"

        used_pct=$(( total_b > 0 ? 100 * used_b / total_b : 0 ))
        free_pct=$(( total_b > 0 ? 100 * free_b / total_b : 0 ))
        cached_pct=$(( total_b > 0 ? 100 * buff_cache_b / total_b : 0 ))
        avail_pct=$(( total_b > 0 ? 100 * available_b / total_b : 0 ))
        swap_pct=$(( swap_total_b > 0 ? 100 * swap_used_b / swap_total_b : 0 ))

        read -r total_val total_unit <<< "$(convert_bytes "$total_b")"
        read -r used_val used_unit <<< "$(convert_bytes "$used_b")"
        read -r free_val free_unit <<< "$(convert_bytes "$free_b")"
        read -r cached_val cached_unit <<< "$(convert_bytes "$buff_cache_b")"
        read -r available_val available_unit <<< "$(convert_bytes "$available_b")"
        read -r swap_total_val swap_total_unit <<< "$(convert_bytes "$swap_total_b")"
        read -r swap_used_val swap_used_unit <<< "$(convert_bytes "$swap_used_b")"

        JSON_OUTPUT=$(cat <<EOF
        {
            "memory_info": {
                "total": {"total": $total_val, "total_unit": "$total_unit", "actual": $total_val, "actual_unit": "$total_unit", "percent": 100},
                "used": {"total": $total_val, "total_unit": "$total_unit", "actual": $used_val, "actual_unit": "$used_unit", "percent": $used_pct},
                "free": {"total": $total_val, "total_unit": "$total_unit", "actual": $free_val, "actual_unit": "$free_unit", "percent": $free_pct},
                "cached": {"total": $total_val, "total_unit": "$total_unit", "actual": $cached_val, "actual_unit": "$cached_unit", "percent": $cached_pct},
                "available": {"total": $total_val, "total_unit": "$total_unit", "actual": $available_val, "actual_unit": "$available_unit", "percent": $avail_pct},
                "swap": {"total": $swap_total_val, "total_unit": "$swap_total_unit", "actual": $swap_used_val, "actual_unit": "$swap_used_unit", "percent": $swap_pct},
                "video": {"total": 100, "total_unit": "%%", "actual": $io_wait, "actual_unit": "%%", "percent": $io_wait}
            }
        }
        EOF
        )

        echo "$JSON_OUTPUT"
  commands:
    # cpu_temp:
    #   - bash
    #   - -c
    #   - |
    #     cat /sys/class/thermal/thermal_zone*/temp \
    #     | column -s $'\t' -t \
    #     | sed 's/\(.\)..$/.\1/'
    model_name:
      - bash
      - -c
      - |
        hostnamectl \
          | grep Operating \
          | awk -F: '{print $2}' \
          | xargs
    processes:
      - bash
      - -c
      - |
        ps -ewwo pid,user,%mem,%cpu,cmd \
          --sort=-%cpu --no-headers \
          | head -n 10 \
          | tail -n 10
    service_is_active:
      - bash
      - -c
      - systemctl is-active {service} || true
    service_is_enabled:
      - bash
      - -c
      - systemctl is-enabled {service} || true
    storage:
      - bash
      - -c
      - |
        df -B1 \
          | grep -v tmpfs \
          | grep -v none \
          | grep -v snap \
          | awk '(NR>1)' \
          | sort -k 6
  services_list:
    - apparmor.service
    - apport.service
    - blk-availability.service
    - caddy.service
    - chrony.service
    - cloud-config.service
    - cloud-final.service
    - cloud-init-local.service
    - cloud-init.service
    - console-setup.service
    - cron.service
    - dbus.service
    - ephemeral-disk-warning.service
    - finalrd.service
    - getty@tty1.service
    - hv-kvp-daemon.service
    - keyboard-setup.service
    - kmod-static-nodes.service
    - lvm2-monitor.service
    - monitor-api.service
    - monitor-web.service
    - multipathd.service
    - networkd-dispatcher.service
    - packagekit.service
    - plymouth-quit-wait.service
    - plymouth-quit.service
    - plymouth-read-write.service
    - polkit.service
    - rsyslog.service
    - serial-getty@ttyS0.service
    - setvtrgb.service
    - snapd.apparmor.service
    - snapd.seeded.service
    - snapd.service
    - ssh.service
    - sysstat.service
    - systemd-binfmt.service
    - systemd-fsck-root.service
    - systemd-hostnamed.service
    - systemd-journal-flush.service
    - systemd-journald.service
    - systemd-logind.service
    - systemd-machine-id-commit.service
    - systemd-modules-load.service
    - systemd-networkd-wait-online.service
    - systemd-networkd.service
    - systemd-random-seed.service
    - systemd-remount-fs.service
    - systemd-resolved.service
    - systemd-sysctl.service
    - systemd-sysusers.service
    - systemd-tmpfiles-setup-dev.service
    - systemd-tmpfiles-setup.service
    - systemd-udev-trigger.service
    - systemd-udevd.service
    - systemd-update-utmp.service
    - systemd-user-sessions.service
    - ufw.service
    - unattended-upgrades.service
    - user-runtime-dir@1000.service
    - user@1000.service
    - walinuxagent.service
  run:
    uname:
      - uname -a
    lsb_release:
      - lsb_release -a
    hostnamectl:
      - hostnamectl
    get_storages:
      - |
        df -B1 \
          | grep -v tmpfs \
          | grep -v none \
          | grep -v snap \
          | awk '(NR>1)' \
          | sort -k 6
    processes:
      - dash
      - -c
      - |
        "
          ps -ewwo pid,user,%mem,%cpu,cmd \
            --sort=-%cpu --no-headers \
            | head -n 10 \
            | tail -n 10
        "
    services:
      - systemctl list-units --type=service
    lscpu:
      - lscpu
    lsinitramfs:
      - lsinitramfs
    lslocks:
      - lslocks
    lsmem:
      - lsmem
    lsns:
      - lsns
    lspci:
      - lspci
    lsscsi:
      - lsscsi
    lsvmbus:
      - lsvmbus
    lsattr:
      - lsattr
    lsblk:
      - lsblk
    lshw:
      - lshw
    lsipc:
      - lsipc

    lslogins:
      - lslogins
    lsmod:
      - lsmod
    lsof:
      - lsof
    lspgpot:
      - lspgpot
    lsusb:
      - lsusb
